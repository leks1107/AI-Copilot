{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\AI-Copilot\\\\frontend\\\\src\\\\components\\\\MicStreamer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MicrophoneIcon, StopIcon } from '@heroicons/react/24/solid';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicStreamer = ({\n  onTranscript,\n  onGptResponse\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const wsRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const processorRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n\n  // Initialize WebSocket connection\n  const initWebSocket = () => {\n    wsRef.current = new WebSocket(`ws://${window.location.hostname}:8000/ws/transcription`);\n    wsRef.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      setError(null);\n    };\n    wsRef.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      switch (data.event) {\n        case 'transcript':\n          onTranscript(data.text);\n          break;\n        case 'gpt_response':\n          onGptResponse(data.text);\n          break;\n        case 'error':\n          setError(data.error);\n          toast.error(data.error);\n          break;\n        case 'status':\n          setIsConnected(data.status === 'connected');\n          break;\n      }\n    };\n    wsRef.current.onclose = () => {\n      console.log('WebSocket disconnected');\n      setIsConnected(false);\n      // Attempt to reconnect after 1 second\n      setTimeout(initWebSocket, 1000);\n    };\n    wsRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n      setError('WebSocket connection error');\n      toast.error('Connection error');\n    };\n  };\n\n  // Initialize audio processing\n  const initAudio = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaStreamRef.current = stream;\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      audioContextRef.current = audioContext;\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(4096, 1, 1);\n      processorRef.current = processor;\n      processor.onaudioprocess = e => {\n        if (!isListening || !wsRef.current || wsRef.current.readyState !== WebSocket.OPEN) return;\n        const inputData = e.inputBuffer.getChannelData(0);\n\n        // Convert to 16kHz PCM\n        const pcmData = downsampleBuffer(inputData, audioContext.sampleRate, 16000);\n\n        // Convert to base64\n        const base64Data = btoa(String.fromCharCode.apply(null, new Uint8Array(pcmData.buffer)));\n\n        // Send to WebSocket\n        wsRef.current.send(JSON.stringify({\n          event: 'audio_chunk',\n          audio: base64Data\n        }));\n      };\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n    } catch (error) {\n      console.error('Error initializing audio:', error);\n      setError('Failed to access microphone');\n      toast.error('Microphone access denied');\n    }\n  };\n\n  // Downsample audio to 16kHz\n  const downsampleBuffer = (buffer, sampleRate, targetSampleRate) => {\n    if (sampleRate === targetSampleRate) return buffer;\n    const ratio = sampleRate / targetSampleRate;\n    const newLength = Math.round(buffer.length / ratio);\n    const result = new Float32Array(newLength);\n    for (let i = 0; i < newLength; i++) {\n      result[i] = buffer[Math.floor(i * ratio)];\n    }\n    return result;\n  };\n\n  // Start listening\n  const startListening = async () => {\n    if (!wsRef.current) {\n      initWebSocket();\n    }\n    if (!audioContextRef.current) {\n      await initAudio();\n    }\n    setIsListening(true);\n    toast.success('Started listening');\n  };\n\n  // Stop listening\n  const stopListening = () => {\n    setIsListening(false);\n    if (processorRef.current) {\n      processorRef.current.disconnect();\n    }\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n    }\n    toast.success('Stopped listening');\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopListening();\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Audio Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isListening ? stopListening : startListening,\n        className: `p-4 rounded-full ${isListening ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'} text-white transition-colors`,\n        disabled: !isConnected,\n        children: isListening ? /*#__PURE__*/_jsxDEV(StopIcon, {\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600\",\n          children: isListening ? 'Recording...' : 'Click to start recording'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-500\",\n          children: isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2022 Make sure your microphone is properly connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2022 Speak clearly and at a normal pace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2022 The system will automatically transcribe your speech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(MicStreamer, \"EHys2Yo302JNFjaNluz+WlLmVdU=\");\n_c = MicStreamer;\nexport default MicStreamer;\nvar _c;\n$RefreshReg$(_c, \"MicStreamer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MicrophoneIcon","StopIcon","toast","jsxDEV","_jsxDEV","MicStreamer","onTranscript","onGptResponse","_s","isListening","setIsListening","isConnected","setIsConnected","error","setError","wsRef","audioContextRef","processorRef","mediaStreamRef","initWebSocket","current","WebSocket","window","location","hostname","onopen","console","log","onmessage","event","data","JSON","parse","text","status","onclose","setTimeout","onerror","initAudio","stream","navigator","mediaDevices","getUserMedia","audio","audioContext","AudioContext","webkitAudioContext","source","createMediaStreamSource","processor","createScriptProcessor","onaudioprocess","e","readyState","OPEN","inputData","inputBuffer","getChannelData","pcmData","downsampleBuffer","sampleRate","base64Data","btoa","String","fromCharCode","apply","Uint8Array","buffer","send","stringify","connect","destination","targetSampleRate","ratio","newLength","Math","round","length","result","Float32Array","i","floor","startListening","success","stopListening","disconnect","getTracks","forEach","track","stop","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/alexa/AI-Copilot/frontend/src/components/MicStreamer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { MicrophoneIcon, StopIcon } from '@heroicons/react/24/solid';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst MicStreamer = ({ onTranscript, onGptResponse }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const wsRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const processorRef = useRef(null);\r\n  const mediaStreamRef = useRef(null);\r\n\r\n  // Initialize WebSocket connection\r\n  const initWebSocket = () => {\r\n    wsRef.current = new WebSocket(`ws://${window.location.hostname}:8000/ws/transcription`);\r\n\r\n    wsRef.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setIsConnected(true);\r\n      setError(null);\r\n    };\r\n\r\n    wsRef.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      \r\n      switch (data.event) {\r\n        case 'transcript':\r\n          onTranscript(data.text);\r\n          break;\r\n        case 'gpt_response':\r\n          onGptResponse(data.text);\r\n          break;\r\n        case 'error':\r\n          setError(data.error);\r\n          toast.error(data.error);\r\n          break;\r\n        case 'status':\r\n          setIsConnected(data.status === 'connected');\r\n          break;\r\n      }\r\n    };\r\n\r\n    wsRef.current.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n      setIsConnected(false);\r\n      // Attempt to reconnect after 1 second\r\n      setTimeout(initWebSocket, 1000);\r\n    };\r\n\r\n    wsRef.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      setError('WebSocket connection error');\r\n      toast.error('Connection error');\r\n    };\r\n  };\r\n\r\n  // Initialize audio processing\r\n  const initAudio = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaStreamRef.current = stream;\r\n\r\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n      audioContextRef.current = audioContext;\r\n\r\n      const source = audioContext.createMediaStreamSource(stream);\r\n      const processor = audioContext.createScriptProcessor(4096, 1, 1);\r\n      processorRef.current = processor;\r\n\r\n      processor.onaudioprocess = (e) => {\r\n        if (!isListening || !wsRef.current || wsRef.current.readyState !== WebSocket.OPEN) return;\r\n\r\n        const inputData = e.inputBuffer.getChannelData(0);\r\n        \r\n        // Convert to 16kHz PCM\r\n        const pcmData = downsampleBuffer(inputData, audioContext.sampleRate, 16000);\r\n        \r\n        // Convert to base64\r\n        const base64Data = btoa(String.fromCharCode.apply(null, new Uint8Array(pcmData.buffer)));\r\n\r\n        // Send to WebSocket\r\n        wsRef.current.send(JSON.stringify({\r\n          event: 'audio_chunk',\r\n          audio: base64Data\r\n        }));\r\n      };\r\n\r\n      source.connect(processor);\r\n      processor.connect(audioContext.destination);\r\n\r\n    } catch (error) {\r\n      console.error('Error initializing audio:', error);\r\n      setError('Failed to access microphone');\r\n      toast.error('Microphone access denied');\r\n    }\r\n  };\r\n\r\n  // Downsample audio to 16kHz\r\n  const downsampleBuffer = (buffer, sampleRate, targetSampleRate) => {\r\n    if (sampleRate === targetSampleRate) return buffer;\r\n\r\n    const ratio = sampleRate / targetSampleRate;\r\n    const newLength = Math.round(buffer.length / ratio);\r\n    const result = new Float32Array(newLength);\r\n\r\n    for (let i = 0; i < newLength; i++) {\r\n      result[i] = buffer[Math.floor(i * ratio)];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  // Start listening\r\n  const startListening = async () => {\r\n    if (!wsRef.current) {\r\n      initWebSocket();\r\n    }\r\n    \r\n    if (!audioContextRef.current) {\r\n      await initAudio();\r\n    }\r\n\r\n    setIsListening(true);\r\n    toast.success('Started listening');\r\n  };\r\n\r\n  // Stop listening\r\n  const stopListening = () => {\r\n    setIsListening(false);\r\n    \r\n    if (processorRef.current) {\r\n      processorRef.current.disconnect();\r\n    }\r\n    \r\n    if (mediaStreamRef.current) {\r\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    \r\n    if (audioContextRef.current) {\r\n      audioContextRef.current.close();\r\n    }\r\n\r\n    toast.success('Stopped listening');\r\n  };\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      stopListening();\r\n      if (wsRef.current) {\r\n        wsRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow p-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Audio Input</h2>\r\n      \r\n      <div className=\"flex items-center justify-center space-x-4\">\r\n        <button\r\n          onClick={isListening ? stopListening : startListening}\r\n          className={`p-4 rounded-full ${\r\n            isListening\r\n              ? 'bg-red-500 hover:bg-red-600'\r\n              : 'bg-blue-500 hover:bg-blue-600'\r\n          } text-white transition-colors`}\r\n          disabled={!isConnected}\r\n        >\r\n          {isListening ? (\r\n            <StopIcon className=\"h-6 w-6\" />\r\n          ) : (\r\n            <MicrophoneIcon className=\"h-6 w-6\" />\r\n          )}\r\n        </button>\r\n        \r\n        <div className=\"flex flex-col\">\r\n          <span className=\"text-gray-600\">\r\n            {isListening ? 'Recording...' : 'Click to start recording'}\r\n          </span>\r\n          <span className=\"text-sm text-gray-500\">\r\n            {isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mt-4 text-sm text-gray-500\">\r\n        <p>â€¢ Make sure your microphone is properly connected</p>\r\n        <p>â€¢ Speak clearly and at a normal pace</p>\r\n        <p>â€¢ The system will automatically transcribe your speech</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicStreamer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}